version: "3.9"
services:
  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    restart: unless-stopped
    env_file: ./.env    
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE    
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db_mysql:/var/lib/mysql

  mongodb:
    image: mongo:4.4
    container_name: mongodb
    hostname: mongodb
    restart: unless-stopped
    ports:
      - $MONGO_HOST_PORT:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_DB_USERNAME=$MONGO_DB_USERNAME
      - MONGO_DB_PASSWORD=$MONGO_DB_PASSWORD
    volumes:
      - db_mongo:/data/db/
      - db_mongo:/var/log/mongodb/
      - db_mongo:/docker-entrypoint-initdb.d/
    command: ["--bind_ip", "0.0.0.0"]
  
  app-gateway:
    image: backend/app-gateway:1.0
    container_name: app-gateway
    restart: on-failure    
    env_file: ./.env
    build: ./incidisfy-gateway/incidisfy-backend-gateway      
    ports:      
      - $APP_GATEWAY_LOCAL_PORT:$APP_GATEWAY_DOCKER_PORT  
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true  

  app-categoria:
    image: backend/app-categoria:1.0
    container_name: app-categoria
    restart: on-failure
    depends_on:
      - mysqldb      
    env_file: ./.env
    build: ./incidisfy-consulta/incidisfy-backend-categoria      
    ports:      
      - $APP_CATEGORIA_LOCAL_PORT:$APP_CATEGORIA_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  app-cliente:
    image: backend/app-cliente:1.0
    container_name: app-cliente
    restart: on-failure
    depends_on:
      - mysqldb
    env_file: ./.env
    build: ./incidisfy-consulta/incidisfy-backend-cliente      
    ports:      
      - $APP_CLIENTE_LOCAL_PORT:$APP_CLIENTE_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  app-produto:
    image: backend/app-produto:1.0
    container_name: app-produto
    restart: on-failure
    depends_on:
      - mysqldb
    env_file: ./.env
    build: ./incidisfy-consulta/incidisfy-backend-produto      
    ports:      
      - $APP_PRODUTO_LOCAL_PORT:$APP_PRODUTO_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  app-reclamacao:
    image: backend/app-reclamacao:1.0
    container_name: app-reclamacao    
    depends_on:
      - mysqldb
    env_file: ./.env
    build: ./incidisfy-reclamacao/incidisfy-backend-reclamacao      
    ports:      
      - $APP_RECLAMACAO_LOCAL_PORT:$APP_RECLAMACAO_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  app-anexo:    
    image: backend/app-anexo:1.0
    container_name: app-anexo
    restart: on-failure
    depends_on:
      - mongodb
    env_file: ./.env
    build: ./incidisfy-anexo/incidisfy-backend-anexo
    ports:      
      - $APP_ANEXO_LOCAL_PORT:$APP_ANEXO_DOCKER_PORT
    environment:      
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=$MONGO_DB
      - SPRING_DATA_MONGODB_AUTO_INDEX_CREATION=$MONGO_AUTO_INDEX_CREATION
      - SPRING_DATA_MONGODB_HOST=$MONGO_DB
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=$MONGO_DB_USERNAME
      - SPRING_DATA_MONGODB_PASSWORD=$MONGO_DB_PASSWORD
      - SPRING_DATA_MONGODB_DATABASE=$MONGO_DB
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  app-frontend:
    image: frontend/front-reclamacao:1.0
    container_name: front-reclamacao
    restart: on-failure
    depends_on:
      - app-gateway
    build:
      context: ./incidisfy-frontend-web
      dockerfile: Dockerfile-docker
    ports:
      - '8080:8080'
    links:
      - app-gateway
    volumes:
      - .:/app-frontend
    stdin_open: true
    tty: true
  
volumes:
  db_mongo:
  db_mysql: