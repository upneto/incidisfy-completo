package br.com.fiap.fmba.controller;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.TestConfiguration;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.context.annotation.Bean;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;

import br.com.incidisfy.controller.api.ReclamacaoController;
import br.com.incidisfy.controller.payload.reclamacao.ReclamacaoPayload;
import br.com.incidisfy.resources.exception.AutenticatorException;
import br.com.incidisfy.resources.exception.BusinessException;
import br.com.incidisfy.resources.exception.WebServiceException;
import br.com.incidisfy.service.ReclamacaoService;

@RunWith(SpringRunner.class)
public class ReclamacaoControllerTest {
	
	static final List<ReclamacaoPayload> LIST_PAYLOAD = new ArrayList<>();
	static {
		LIST_PAYLOAD.add(ReclamacaoPayload.builder()
				.codigo("TESTE")		
				.descricao("TESTE")
				.build());
	}
	
	@TestConfiguration
    static class ReclamacaoControllerTestConfiguration {        
		
		@Bean
        public ReclamacaoController reclamacaoController() {
            return new ReclamacaoController();
        }
    }
	
	@Autowired
	private ReclamacaoController controller;
	
	@MockBean
	private ReclamacaoService service;
	
	@Before
	public void setUp() throws WebServiceException, BusinessException {
	    Mockito.when(service.findAll()).thenReturn(LIST_PAYLOAD);
	}
	
	@Test
	public void testFindAll() throws WebServiceException, BusinessException, AutenticatorException {
		ResponseEntity<List<ReclamacaoPayload>> result = this.controller.findAll();
		assertEquals(result.getStatusCode(), HttpStatus.OK);
		assertEquals(result.getBody().size(), LIST_PAYLOAD.size());
		assertArrayEquals(result.getBody().toArray(), LIST_PAYLOAD.toArray());
	}

}
