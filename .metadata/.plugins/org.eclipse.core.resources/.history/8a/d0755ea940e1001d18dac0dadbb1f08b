package br.com.incidisfy.service;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.incidisfy.controller.payload.CategoriaRequest;
import br.com.incidisfy.controller.payload.CategoriaResponse;
import br.com.incidisfy.controller.payload.ClientePayload;
import br.com.incidisfy.persistence.dao.CategoriaRepository;
import br.com.incidisfy.persistence.model.Categoria;
import br.com.incidisfy.persistence.model.Cliente;
import br.com.incidisfy.persistence.model.TipoPessoa;
import br.com.incidisfy.resources.exception.DaoException;

@Service
public class CategoriaService {

	@Autowired
	private CategoriaRepository repository;

	public List<CategoriaResponse> findAll() throws DaoException {
		List<CategoriaResponse> categorias = new ArrayList<CategoriaResponse>();
		try {
			List<Categoria> result = this.repository.findAll();
			result.stream().forEach(categoria -> {
				categorias.add(CategoriaResponse.builder()
						.codigo(categoria.getCodigo())
						.descricao(categoria.getDescricao())
						.build());
			});
			return categorias;
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}
	
	public void insert(CategoriaRequest request) throws DaoException {
		try {
			Categoria objToSave = Categoria.builder()
					.descricao(request.getDescricao())					
					.build();
			
			clienteToSave.buildContatos(cliente.getContatos());
			clienteToSave.buildEnderecos(cliente.getEnderecos());
			
			this.repository.save(clienteToSave);
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}

	public void update(ClientePayload cliente) throws DaoException {
		try {
			
			Cliente clienteToSave = Cliente.builder()
					.id(cliente.getId())
					.informacao(cliente.getInformacao())
					.nome(cliente.getNome())
					.nomeRazaoSocial(cliente.getNomeRazaoSocial())
					.tipoPessoa(TipoPessoa.builder().id(cliente.getTipoPessoa()).build())
					.dataCriacao(Calendar.getInstance().getTime())
					.build();
					
			clienteToSave.buildContatos(cliente.getContatos());
			clienteToSave.buildEnderecos(cliente.getEnderecos());
			
			this.repository.save(clienteToSave);
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}
}
