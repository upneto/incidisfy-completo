package br.com.incidisfy.resources.mq;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;

import com.amazonaws.services.sqs.AmazonSQSAsync;
import com.fasterxml.jackson.core.JsonProcessingException;

import br.com.incidisfy.controller.payload.ReclamacaoPayload;
import br.com.incidisfy.resources.exception.MessageQueueException;
import io.awspring.cloud.messaging.core.QueueMessageChannel;

@Service
public class MessageSender {

	@Value("${spring.messages.queue.name}")
	private String queueName;

	@Autowired
	private AmazonSQSAsync amazonSqs;

	@Autowired
	public MessageSender(final AmazonSQSAsync amazonSQSAsync) {
		this.amazonSqs = amazonSQSAsync;
	}

	/**
	 * Sender
	 * @param messagePayload
	 * @return
	 */
	public boolean send(final String messagePayload) {
		MessageChannel messageChannel = new QueueMessageChannel(this.amazonSqs, this.queueName);

		Message<String> message = MessageBuilder.withPayload(messagePayload)
				.setHeader("sender", "app1")
				.setHeaderIfAbsent("country", "AE")
				.build();

		long waitTimeoutMillis = 5000;
		boolean sentStatus = messageChannel.send(message, waitTimeoutMillis);
		return sentStatus;
	}

	/**
	 * 
	 * @param reclamacao
	 * @throws MessageQueueException 
	 */
	public void sendCustomerComplaint(ReclamacaoPayload reclamacao) throws MessageQueueException {
		try {
			final String JSON = _WRITER.writeValueAsString(reclamacao.getReclamacao());
			this.messageSender.send(JSON);
		} catch (JsonProcessingException e) {
			throw new MessageQueueException("Erro na conversão da reclamação em formato JSON!", e);
		}				
	}
}
