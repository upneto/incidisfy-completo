package br.com.incidisfy.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.incidisfy.controller.payload.ReclamacaoPayload;
import br.com.incidisfy.persistence.dao.ReclamacaoRepository;
import br.com.incidisfy.persistence.model.Reclamacao;
import br.com.incidisfy.resources.exception.DaoException;

@Service
public class ReclamacaoService {

	@Autowired
	private ReclamacaoRepository repository;

	public ReclamacaoPayload find(long id) throws DaoException {
		try {
			Reclamacao reclamacao = this.repository.findById(id).get();			
			return ReclamacaoPayload.builder()
					.reclamacao(reclamacao)
					.build();						
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}

	public List<ReclamacaoPayload> findAll() throws DaoException {
		List<ReclamacaoPayload> reclamacaos = new ArrayList<ReclamacaoPayload>();
		try {
			List<Reclamacao> findAll = this.repository.findAll();
			findAll.stream().forEach(reclamacao -> {
				reclamacaos.add(ReclamacaoPayload.builder()
						.reclamacao(reclamacao)
						.build());
			});
			return reclamacaos;
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}

	public void update(ReclamacaoPayload reclamacao) throws DaoException {
		try {
			this.repository.save(Reclamacao.builder()
					.codigo(reclamacao.getReclamacao().getCodigo())
					.descricao(reclamacao.getReclamacao().getDescricao())
					.build());
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}

	public void delete(long id) throws DaoException {
		try {
			this.repository.deleteById(id);
		} catch (Exception e) {
			throw new DaoException(e.getMessage(), e);
		}
	}
}
