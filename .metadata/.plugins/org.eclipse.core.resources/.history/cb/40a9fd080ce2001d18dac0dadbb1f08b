package br.com.incidisfy.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;

import com.amazonaws.services.sqs.AmazonSQSAsync;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;

import br.com.incidisfy.controller.payload.ReclamacaoPayload;
import br.com.incidisfy.resources.exception.MessageQueueException;
import io.awspring.cloud.messaging.core.QueueMessageChannel;

@Service
public class ReclamacaoMessageSender {

	@Value("${spring.messages.queue.relacacao}")
	private String queueReclamacao;
	
	@Value("${spring.messages.queue.email}")
	private String queueEmail;

	@Autowired
	private AmazonSQSAsync amazonSqs;
	
	/** Conversor JSON */
	private static final ObjectWriter _WRITER = new ObjectMapper().writer().withDefaultPrettyPrinter();

	@Autowired
	public ReclamacaoMessageSender(final AmazonSQSAsync amazonSQSAsync) {
		this.amazonSqs = amazonSQSAsync;
	}

	/**
	 * Sender
	 * @param messagePayload
	 * @return
	 */
	protected boolean sendReclamacao(final String messagePayload) {
		MessageChannel messageChannel = new QueueMessageChannel(this.amazonSqs, this.queueReclamacao);
		return this.send(messagePayload, messageChannel);
	}

	/**
	 * 
	 * @param messagePayload
	 * @param messageChannel
	 * @return
	 */
	private boolean send(final String messagePayload, MessageChannel messageChannel) {
		Message<String> message = MessageBuilder.withPayload(messagePayload)
				.setHeader("sender", "app1")
				.setHeaderIfAbsent("country", "AE")
				.build();

		long waitTimeoutMillis = 5000;
		boolean sentStatus = messageChannel.send(message, waitTimeoutMillis);
		return sentStatus;
	}

	/**
	 * 
	 * @param reclamacao
	 * @throws MessageQueueException 
	 */
	public void sendCustomerComplaint(ReclamacaoPayload reclamacao) throws MessageQueueException {
		try {
			final String JSON = _WRITER.writeValueAsString(reclamacao.getReclamacao());
			this.send(JSON);
		} catch (JsonProcessingException e) {
			throw new MessageQueueException("Erro na conversão da reclamação em formato JSON!", e);
		}				
	}
}
